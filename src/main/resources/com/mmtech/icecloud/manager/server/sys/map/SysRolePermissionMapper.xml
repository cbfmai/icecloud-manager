<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mmtech.icecloud.manager.server.sys.dao.SysRolePermissionMapper">
  <resultMap id="BaseResultMap" type="com.mmtech.icecloud.manager.server.sys.entity.SysRolePermission">
    <id column="id_" jdbcType="BIGINT" property="id" />
    <result column="role_id_" jdbcType="BIGINT" property="roleId" />
    <result column="permission_id_" jdbcType="BIGINT" property="permissionId" />
    <result column="status_" jdbcType="INTEGER" property="status" />
    <result column="created_time_" jdbcType="TIMESTAMP" property="createdTime" />
  </resultMap>
  <sql id="Condition_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Condition_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id_, role_id_, permission_id_, status_, created_time_
  </sql>
  <select id="selectByCondition" parameterType="com.mmtech.icecloud.manager.server.sys.entity.SysRolePermissionCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role_permission
    <if test="_parameter != null">
      <include refid="Condition_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit > 0 ">
      <if test="offset > 0">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == 0">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role_permission
    where id_ = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role_permission
    where id_ = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.mmtech.icecloud.manager.server.sys.entity.SysRolePermission">
    insert into sys_role_permission (id_, role_id_, permission_id_, 
      status_, created_time_)
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{permissionId,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mmtech.icecloud.manager.server.sys.entity.SysRolePermission">
    insert into sys_role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id_,
      </if>
      <if test="roleId != null">
        role_id_,
      </if>
      <if test="permissionId != null">
        permission_id_,
      </if>
      <if test="status != null">
        status_,
      </if>
      <if test="createdTime != null">
        created_time_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByCondition" parameterType="com.mmtech.icecloud.manager.server.sys.entity.SysRolePermissionCriteria" resultType="java.lang.Long">
    select count(*) from sys_role_permission
    <if test="_parameter != null">
      <include refid="Condition_Where_Clause" />
    </if>
  </select>
  <update id="updateByConditionSelective" parameterType="map">
    update sys_role_permission
    <set>
      <if test="record.id != null">
        id_ = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.roleId != null">
        role_id_ = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.permissionId != null">
        permission_id_ = #{record.permissionId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status_ = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null">
        created_time_ = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Condition_Where_Clause" />
    </if>
  </update>
  <update id="updateByCondition" parameterType="map">
    update sys_role_permission
    set id_ = #{record.id,jdbcType=BIGINT},
      role_id_ = #{record.roleId,jdbcType=BIGINT},
      permission_id_ = #{record.permissionId,jdbcType=BIGINT},
      status_ = #{record.status,jdbcType=INTEGER},
      created_time_ = #{record.createdTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Condition_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mmtech.icecloud.manager.server.sys.entity.SysRolePermission">
    update sys_role_permission
    <set>
      <if test="roleId != null">
        role_id_ = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        permission_id_ = #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status_ = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time_ = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id_ = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mmtech.icecloud.manager.server.sys.entity.SysRolePermission">
    update sys_role_permission
    set role_id_ = #{roleId,jdbcType=BIGINT},
      permission_id_ = #{permissionId,jdbcType=BIGINT},
      status_ = #{status,jdbcType=INTEGER},
      created_time_ = #{createdTime,jdbcType=TIMESTAMP}
    where id_ = #{id,jdbcType=BIGINT}
  </update>
</mapper>